openapi: 3.0.3
info:
  title: Kazyon Payment Service for iVend
  description: |-
    This project is consist of 2 API's, and they will be used by iVend to integrate with Kazyon Payment Service, one of them is concerned to get all the needed information about the available services and the other one is concernded to perform the steps needed to use a service. 
    <br> <h2> The first API (Get Service /service) </h2> Will be called every hour and this data will be cached on pos. This will save a lot of calls and bandwith consumtion.
    <br> <h2> The second API (Post /step/{serviceName}) </h2> Will be called to perform a step related to a service, the body will be constructed using the required attributes for each step, the response will be dynamic in form a key, value map and the data in this map will be used in later steps or displayed to user. 
    <br> <h2> User Defined Table(UDT) </h2> Stored in IVend database and contains all data needed about the transactions in which a service has been used. the contient of the table is receiptNumber(generated by IVend during the transaction process), transactionId(generated by IVend during the transaction process),
      transaction details

  contact:
    email: mohamed.nasr@kazyon.com
  version: 1.0.01
servers:
  - url: will be available soon...
tags:
  - name: service
    description: Everything about getting available services, and using them.



paths:
  /service:
    get:
      tags:
        - service
      summary: get all the offered services and all required input parameter to be sent to validation service
      description: This service will be called every hour by iVend to cache all the required information
      operationId: getServicesInfo
      parameters:
        - $ref: '#/components/parameters/storeCode'
        - $ref: '#/components/parameters/storePassword'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/servicesInfo'
                example:
                  - serviceId: 120
                    displayName: electric bill
                    serviceType: BILL_PAYMENT
                    categoryName: electricity
                    steps:
                      - stepId: 1
                        stepName: INQUIRY
                        link: /step/inquiry
                        nextStepId: 2
                        stepOrder: 1
                        attributes:
                          - id: 1
                            name: billReference
                            type: String
                            minLength: 4
                            maxLength: 15
                            shownInUI: true
                            regexValidation: null
                            sourceStepId: 0
                            editable: true
                            displayName: رقم الفاتورة/bill reference
                      - stepId: 2
                        stepName: PAY
                        link: /step/pay
                        stepOrder: 2
                        attributes:
                          - id: 2
                            name: billReference
                            type: String
                            minLength: 4
                            maxLength: 15
                            shownInUI: true
                            regexValidation: null
                            sourceStepId: 1
                            editable: false
                            displayName: رقم الفاتورة/bill reference

                          - id: 3
                            name: amount
                            type: String
                            minLength: 4
                            maxLength: 15
                            shownInUI: true
                            regexValidation: null
                            sourceStepId: 1
                            editable: true
                            displayName: ammount/المبلغ
                            
                  - serviceId: 121
                    displayName: pubg charge
                    serviceType: VOUCHER
                    categoryName: Gaming
                    steps:
                      - stepId: 3
                        stepName: PAY
                        link: /step/pay
                        stepOrder: 1
                        attributes:
                          - id: 4
                            name: mobile number
                            type: String
                            minLength: 11
                            maxLength: 11
                            shownInUI: true
                            regexValidation: "^01.{9}$"
                            sourceStepId: 0
                            editable: true
                            displayName: رقم الهاتف/mobile number
                            
                          - id: 5
                            name: voucherValue
                            type: Select
                            shownInUI: true
                            sourceStepId: 0
                            editable: true
                            displayName: voucher type/نوع الفئة
                            options:
                              - voucherId: 1
                                displayName: pubg 50 UC
                                value: 500
                              - voucherId: 2
                                displayName: pubg 100 UC
                                value: 1000

        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /step/{serviceName}:
    post:
      tags:
        - service
      summary: this endpoint is dynamic endpoint, its based on each sourceStepId with dynamic the corresponding body and dynamic response.
      description: this endpoint will have different link that is provided in each sourceStepId attribute. The body of the request will be each attribute name in the step and it's value. the response will be a dynamic map of key,value containing data that will be used in next step, displayed to users or used by ivend. the attributes used by ived are "reciept" which contains a format to be printed for the user, "sapCode" which is the sap code that will be used for this transaction, "sapQuantity" which is the number od items of that sap code that will be used in this transaction,"kazyonTransactionId" which should be returned in first step, used in all next steps and loggeed in UDT table for each transaction. 
      parameters:
        - name : serviceName
          in: path
          required: true
          schema: 
            type: string
        - $ref: '#/components/parameters/storeCode'
        - $ref: '#/components/parameters/storePassword'

      requestBody:
        description: Send all required parameters as input body that you are already aware of from the [GET] service
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/step'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stepResponse'


        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /commit:
    post:
      tags:
        - service
      summary: this endpoint will comfirm payment and do a real payment using transactionId returned in all steps.NOTE to call this endpoint you need to achive previous steps and get successfull response in all steps. 
      description: this endpoint will be called after the final step, to achive a real payment process using transactionId that will be returned in all previos steps.
      parameters:
        - $ref: '#/components/parameters/storeCode'
        - $ref: '#/components/parameters/storePassword'

      requestBody:
        description: Send transactionId recived from Pay request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commit'



      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commitResponse'


        '401':
          $ref: '#/components/responses/UnauthorizedError'
  



components:
  parameters:
    storeCode:
      name: storeCode
      in: header
      description: storeCode
      required: true
      schema:
        type: string
    storePassword:
      name: storePassword
      in: header
      description: store password, will be provided for each store
      required: true
      schema:
        type: string
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid

  schemas:
    commit:
      type: object
      example:
        kazyonTransactionId: 1201205
      properties:
        kazyonTransactionId:
          type: string
          description: contains the id returned all steps.
          example: 120
       

    step:
      type: object
      example:
          serviceId: 120
          kazyonTransactionId: 10
          billReference: 123123123
          ammount: 100
      properties:
        serviceId:
          type: string
          description: contains the unique identifier for the chosen service
          example: 120
        kazyonTransactionId:
          type: string
          description: contains the id returned in first step or null if this is the first step
          example: 10

    commitResponse:
      type: object
      example:
        kazyonTransactionId: 1201205
        reciept: <h1>reciept</h1> 
      properties:
        reciept:
          type: string
          description: this will be an html content will be printed on reciept
          example: "<h1>reciept</h1>"
        kazyonTransactionId:
          type: string
          description: contains the id returned in all steps.
          example: 1201205
       
    stepResponse:
      type: object
      example:
        kazyonTransactionId: 10
        reciept: <h1>reciept</h1>
        sapCode: 123345678909876
        sapQuantity: 275.25
      properties:
        serviceId:
          type: string
          description: contains the unique identifier for the chosen service
          example: 120
          
          
    servicesInfo:
      type: object
      properties:
        serviceId:
          type: number
        displayName:
          type: string
        categoryName: 
          type: string
          description: name for category under which this service should be listed
        serviceType:
          type: string
          enum:
            - BILL_PAYMENT
            - VOUCHER
        steps:
          type: array
          description: list of steps needed to be done to use this service using stepOrder
          items:
            type: object
            properties:
              stepId:
                type: number
                description: unique identifier for each step
                example: 1
              stepName:
                type: string
                description: the name of the step
                example: PAY
              link:
                type: string
                description: the relative path to the end point call in this step 
                example: /pay
              stepOrder:
                type: number
                description: indintifies the order for this step starting from 1
                example: 1
              attributes:
                type: array
                description: list of attributes that will be used in each step. each attribute has parameters that used for validations or filling the attribute. if any of those parameters is null it should be ignored
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    minLength:
                      type: number
                    maxLength:
                      type: number
                    shownInUI:
                      type: boolean
                    regexValidation:
                      type: string
                    displayName:
                      type: string
                    source:
                      type: string
                      description: can be 0 indecating that the user will fill it or any step id for example 2
                    editable:
                      type: boolean
                      description: indicates whether this field can be edited by user or not. if not editable this filled will be filled from an previous step referenced in attribute source
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          voucherId:
                            type: number
                          displayName:
                            type: string
                          voucherValue:
                            type: number
                              